//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//     Wersja wykonawcza:4.0.30319.42000
//
//     Zmiany w tym pliku mogą spowodować nieprawidłowe zachowanie i zostaną utracone, jeśli
//     kod zostanie ponownie wygenerowany.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DollarWpfClient.DollarServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DollarServiceReference.IDollar")]
    public interface IDollar {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDollar/Convert", ReplyAction="http://tempuri.org/IDollar/ConvertResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ArgumentOutOfRangeException), Action="http://tempuri.org/IDollar/ConvertArgumentOutOfRangeExceptionFault", Name="ArgumentOutOfRangeException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ArgumentNullException), Action="http://tempuri.org/IDollar/ConvertArgumentNullExceptionFault", Name="ArgumentNullException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.FormatException), Action="http://tempuri.org/IDollar/ConvertFormatExceptionFault", Name="FormatException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        string Convert(string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDollar/Convert", ReplyAction="http://tempuri.org/IDollar/ConvertResponse")]
        System.Threading.Tasks.Task<string> ConvertAsync(string value);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDollarChannel : DollarWpfClient.DollarServiceReference.IDollar, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DollarClient : System.ServiceModel.ClientBase<DollarWpfClient.DollarServiceReference.IDollar>, DollarWpfClient.DollarServiceReference.IDollar {
        
        public DollarClient() {
        }
        
        public DollarClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DollarClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DollarClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DollarClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Convert(string value) {
            return base.Channel.Convert(value);
        }
        
        public System.Threading.Tasks.Task<string> ConvertAsync(string value) {
            return base.Channel.ConvertAsync(value);
        }
    }
}
